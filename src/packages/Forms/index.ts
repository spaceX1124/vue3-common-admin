import { useForm } from './src/hooks/useForm'
import { initForm } from './src/initForm'
export {
  Select,
  RadioGroup,
  IntervalInput,
  FormTitle,
  CheckboxGroup
} from './src/components'

export type * from './src/type'
export {
  useForm as useZsForm,
  initForm
}

/**
 * 组件如何控制
 * 1、不同UI框架的组件如何通用控制
 * 2、自定义的组件如何集成进去
 * 3、组件需要异步数据如何获取，包括获取时机
 * 4、组件的props和event如何去绑定
 * 5、执行event如何暴露出来，可由开发者自己控制
 * 6、组件数据如何控制，有数组（json字符串，json数据，一维数组）、字符串，数字，布尔值等
 * */

/**
 * 动态表单
 * 1.表单项左右、上下间隔可配置，gap: 20px 50px;行间距，列间距
 * 2.表单应该是根据容器的宽度自适应的，grid
 * 3.表单项的宽度也是可控制的，通过grid-cols-4可控制一行展示4个，
 * 4.要考虑字段分组，每一组有自己的标题，这个数据结构应该怎么弄，一层还是分层，分层如何适用搜索和表格
 * */

/**
 * 思考一下，
 * 1、一个json对象如何在搜索项，表单项，表格中展示，和隐藏，属性太多了如何规划
 * 2、一个字段如何去控制另外一个或多个字段的显示、数据、值（我认为应该是暴露一个方法，传入要更改的key和回调函数，待定）
 * 3、
 * */

/**
 * 表格
 * 1、如何去规划表单数据用于表格中
 * 2、要考虑该字段既可以回显与表格，还可以进行编辑，编辑时要回显对应组件供用户操作
 * 3、编辑还要考虑整行编辑保存
 * 4、json数据如何与树形表格适配，也可达到编辑的效果
 * 5、要考虑表格字段回显依赖于接口返回，只能调一次，不能调多次
 * 6、要适应虚拟表格和普通表格
 * 7、考虑表格中，字段是不需要字段之间的控制的，如显示等
 *
 * */
/**
 * 搜索组件
 * 1、考虑搜索组件是不需要字段与字段之间的控制的，如显示等
 * 2、
 * */

// 即使定义了很多属性，但要知道，搜索，表格，表单是用不到全部的属性，各有各的作用
// 因此，需要一个定义不同的接口用于对应的功能，将这套数据循环生成三套自己需要的数据，这套数据称为原始数据
// 具体怎么生成自己需要的数据，我的想法是，定义['key']这种然后循环从obj中取出需要的，
// 通用的[]一套，不同的三套[...通用的，...不同的]
const obj = {
  key: 'key1', // 字段的key肯定是必须的
  tableColumns: {} // 表格字段需要的属性
}

/**
 * 我怎么抽表单，搜索，表格呢
 * 
 * */